{
  "comments": [
    {
      "key": {
        "uuid": "NFB.qrNY",
        "filename": "vm/native/java_lang_Runtime.cpp",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2012-12-20T23:54:55Z",
      "side": 1,
      "message": "I worry about the semantics here. we set the global LD_LIBRARY_PATH but this can be called on different threads with different class loaders with different load library paths. it would seem ideal if we have a per dlopen extra argument to pass what the caller needs. (also we have dlopen() calls in other native threads that can observe the LD_LIBRARY_PATH changing)",
      "revId": "ebad130846c2c370f812b129003369dd98b9f8b0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "NFTsw2qA",
        "filename": "vm/native/java_lang_Runtime.cpp",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2012-12-21T00:38:58Z",
      "side": 1,
      "message": "yeah, i meant to add \"synchronized\" to nativeLoad.\n\ni deliberately did it this way because (a) it means no need to change frameworks/base but also (b) if someone _wants_ to try to be clever with PathClassLoader, they can.\n\nthe obvious alternative would be to lose this nativeLoad change and instead add an API that frameworks/base calls when it sets up the apk ClassLoader to also set the effective LD_LIBRARY_PATH. the advantage is that we don\u0027t have to think about what path is in effect at any given time --- it\u0027s the one the system chose. the disadvantage is that if someone wanted to be clever at run time, this bug remains unfixed for them, and they still need to manually dance around pulling in libraries in order.",
      "parentUuid": "NFB.qrNY",
      "revId": "ebad130846c2c370f812b129003369dd98b9f8b0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "NFfuckng",
        "filename": "vm/native/java_lang_Runtime.cpp",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2012-12-21T00:47:09Z",
      "side": 1,
      "message": "the trade-off with having something like dlopen_with_custom_ld_library_path is that with this current fix, i don\u0027t just fix System.loadLibrary --- i fix native dlopen(3) calls too.\n\ni\u0027ve tested srhines\u0027 .apks and a small random selection of games (including a Unity game) plus Firefox, and everything works for me.",
      "parentUuid": "NFTsw2qA",
      "revId": "ebad130846c2c370f812b129003369dd98b9f8b0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "NFL-KeD0",
        "filename": "vm/native/java_lang_Runtime.cpp",
        "patchSetId": 1
      },
      "lineNbr": 86,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2012-12-21T00:54:21Z",
      "side": 1,
      "message": "yes, i\u0027m starting to like just have frameworks/base set it to the one true app ld path for you.",
      "parentUuid": "NFfuckng",
      "revId": "ebad130846c2c370f812b129003369dd98b9f8b0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}